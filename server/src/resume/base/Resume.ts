/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsDate,
  IsNumber,
  IsOptional,
  ValidateNested,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { Experience } from "../../experience/base/Experience";
import { EnumResumeInfecteInitiale } from "./EnumResumeInfecteInitiale";
import { EnumResumeSituationInitiale } from "./EnumResumeSituationInitiale";
import { Epidemie } from "../../epidemie/base/Epidemie";
@ObjectType()
class Resume {
  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  acc!: boolean;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  epsilon!: number | null;

  @ApiProperty({
    required: false,
    type: () => [Experience],
  })
  @ValidateNested()
  @Type(() => Experience)
  @IsOptional()
  experiences?: Array<Experience>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    enum: EnumResumeInfecteInitiale,
    isArray: true,
  })
  @IsEnum(EnumResumeInfecteInitiale, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumResumeInfecteInitiale], {
    nullable: true,
  })
  infecteInitiale?: Array<"Region1" | "Region2" | "Region3" | "Region4">;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  proportionInitiale!: number;

  @ApiProperty({
    required: false,
    enum: EnumResumeSituationInitiale,
  })
  @IsEnum(EnumResumeSituationInitiale)
  @IsOptional()
  @Field(() => EnumResumeSituationInitiale, {
    nullable: true,
  })
  situationInitiale?:
    | "Confinement"
    | "FluxGeo"
    | "FluxGenerationelle"
    | "Libre"
    | null;

  @ApiProperty({
    required: true,
    type: () => Epidemie,
  })
  @ValidateNested()
  @Type(() => Epidemie)
  virus?: Epidemie;
}
export { Resume };
